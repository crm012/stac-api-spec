openapi: 3.0.3
info:
  title: STAC API - Children
  version: 1.0.0-beta.5
  description: >-
    This is an OpenAPI definition of the SpatioTemporal Asset Catalog API -
    Children specification.
  contact:
    name: STAC Specification
    url: http://stacspec.org
  license:
    name: Apache License 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
tags:
  - name: Children
    description: All endpoints related to STAC API - Children
paths:
  /:
    get:
      tags:
        - Children
      summary: landing page
      description: The landing page provides links to the sub-resources.
      operationId: getLandingPage
      responses:
        '200':
          description: |-
            The landing page provides links to the API definition
            (link relations `service-desc` and `service-doc`),
            the Conformance declaration (path `/conformance`,
            link relation `conformance`), and the Feature
            Collections (path `/collections`, link relation
            `data`).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/landingPage'
              example:
                stac_version: 1.0.0-beta.5
                type: Catalog
                id: sentinel
                title: Copernicus Sentinel Imagery
                description: Catalog of Copernicus Sentinel 1 and 2 imagery.
                conformsTo:
                  - https://api.stacspec.org/v1.0.0-beta.5/core
                  - https://api.stacspec.org/v1.0.0-beta.5/children
                  - http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/core
                  - http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30
                  - >-
                    http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson
                links:
                  - href: http://data.example.org/
                    rel: self
                    type: application/json
                    title: this document
                  - href: http://data.example.org/api
                    rel: service-desc
                    type: application/vnd.oai.openapi+json;version=3.0
                    title: the API definition
                  - href: http://data.example.org/api.html
                    rel: service-doc
                    type: text/html
                    title: the API documentation
                  - href: http://data.example.org/conformance
                    rel: conformance
                    type: application/json
                    title: OGC API conformance classes implemented by this server
                  - href: http://data.example.org/children
                    rel: children
                    type: application/json
                    title: Child catalogs and collections of this root catalog
  /children:
    get:
      tags:
        - Children
      summary: the child catalogs and collections of the root catalog
      description: >-
        A body of Catalogs and Collections that are immediate children of this
        root Catalog.
      operationId: getChildren
      responses:
        '200':
          $ref: '#/components/responses/Children'
        '500':
          $ref: '#/components/responses/ServerError'
components:
  schemas:
    children:
      type: object
      required:
        - links
        - children
      properties:
        links:
          $ref: '#/components/schemas/links'
        children:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/catalog'
              - $ref: '#/components/schemas/collection'
    stac_version:
      title: STAC version
      type: string
      example: 1.0.0
    stac_extensions:
      title: STAC extensions
      type: array
      uniqueItems: true
      items:
        anyOf:
          - title: Reference to a JSON Schema
            type: string
            format: uri
          - title: Reference to a core extension
            type: string
    link:
      title: Link
      type: object
      required:
        - href
        - rel
      properties:
        href:
          type: string
          format: uri
          description: The location of the resource
        rel:
          type: string
          description: Relation type of the link
        type:
          type: string
          description: The media type of the resource
        title:
          type: string
          description: Title of the resource
        method:
          type: string
          enum:
            - GET
            - POST
          default: GET
          description: Specifies the HTTP method that the resource expects
        headers:
          type: object
          description: Object key values pairs they map to headers
          example:
            Accept: application/json
        body:
          type: object
          description: >-
            For POST requests, the resource can specify the HTTP body as a JSON
            object.
        merge:
          type: boolean
          default: false
          description: |-
            This is only valid when the server is responding to POST request.

            If merge is true, the client is expected to merge the body value
            into the current request body before following the link.
            This avoids passing large post bodies back and forth when following
            links, particularly for navigating pages through the `POST /search`
            endpoint.

            NOTE: To support form encoding it is expected that a client be able
            to merge in the key value pairs specified as JSON
            `{"next": "token"}` will become `&next=token`.
    links:
      type: array
      items:
        $ref: '#/components/schemas/link'
    catalog:
      type: object
      required:
        - stac_version
        - type
        - id
        - description
        - links
      properties:
        stac_version:
          $ref: '#/components/schemas/stac_version'
        stac_extensions:
          $ref: '#/components/schemas/stac_extensions'
        type:
          type: string
        id:
          type: string
        title:
          type: string
        description:
          type: string
        links:
          $ref: '#/components/schemas/links'
    conformanceClasses:
      type: object
      required:
        - conformsTo
      properties:
        conformsTo:
          description: >-
            A list of all conformance classes implemented by the server. In
            addition to the STAC-specific conformance classes, all OGC-related
            conformance classes listed at `GET /conformances` must be listed
            here. This entry should mirror what `GET /conformances` returns, if
            implemented.
          type: array
          items:
            type: string
    landingPage:
      allOf:
        - $ref: '#/components/schemas/catalog'
        - $ref: '#/components/schemas/conformanceClasses'
    license:
      type: string
      description: |-
        License(s) of the data as a SPDX
        [License identifier](https://spdx.org/licenses/). Alternatively, use
        `proprietary` if the license is not on the SPDX license list or
        `various` if multiple licenses apply. In these two cases links to the
        license texts SHOULD be added, see the `license` link relation type.

        Non-SPDX licenses SHOULD add a link to the license text with the
        `license` relation in the links section. The license text MUST NOT be
        provided as a value of this field. If there is no public license URL
        available, it is RECOMMENDED to host the license text and
        link to it.
      example: Apache-2.0
    extent:
      type: object
      description: >-
        The extent of the features in the collection. In the Core only spatial
        and temporal

        extents are specified. Extensions may add additional members to
        represent other

        extents, for example, thermal or pressure ranges.


        The first item in the array describes the overall extent of

        the data. All subsequent items describe more precise extents, 

        e.g., to identify clusters of data.

        Clients only interested in the overall extent will only need to

        access the first item in each array.
      required:
        - spatial
        - temporal
      properties:
        spatial:
          description: The spatial extent of the features in the collection.
          type: object
          required:
            - bbox
          properties:
            bbox:
              description: >-
                One or more bounding boxes that describe the spatial extent of
                the dataset.


                The first bounding box describes the overall spatial

                extent of the data. All subsequent bounding boxes describe 

                more precise bounding boxes, e.g., to identify clusters of data.

                Clients only interested in the overall spatial extent will

                only need to access the first item in each array.
              type: array
              minItems: 1
              items:
                description: >-
                  Each bounding box is provided as four or six numbers,
                  depending on

                  whether the coordinate reference system includes a vertical
                  axis

                  (height or depth):


                  * Lower left corner, coordinate axis 1

                  * Lower left corner, coordinate axis 2

                  * Minimum value, coordinate axis 3 (optional)

                  * Upper right corner, coordinate axis 1

                  * Upper right corner, coordinate axis 2

                  * Maximum value, coordinate axis 3 (optional)


                  The coordinate reference system of the values is WGS 84
                  longitude/latitude

                  (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a
                  different coordinate

                  reference system is specified in `crs`.


                  For WGS 84 longitude/latitude the values are in most cases the
                  sequence of

                  minimum longitude, minimum latitude, maximum longitude and
                  maximum latitude.

                  However, in cases where the box spans the antimeridian the
                  first value

                  (west-most box edge) is larger than the third value (east-most
                  box edge).


                  If the vertical axis is included, the third and the sixth
                  number are

                  the bottom and the top of the 3-dimensional bounding box.


                  If a feature has multiple spatial geometry properties, it is
                  the decision of the

                  server whether only a single spatial geometry property is used
                  to determine

                  the extent or all relevant geometries.
                type: array
                minItems: 4
                maxItems: 6
                items:
                  type: number
                example:
                  - -180
                  - -90
                  - 180
                  - 90
            crs:
              description: >-
                Coordinate reference system of the coordinates in the spatial
                extent

                (property `bbox`). The default reference system is WGS 84
                longitude/latitude.

                In the Core this is the only supported coordinate reference
                system.

                Extensions may support additional coordinate reference systems
                and add

                additional enum values.
              type: string
              enum:
                - http://www.opengis.net/def/crs/OGC/1.3/CRS84
              default: http://www.opengis.net/def/crs/OGC/1.3/CRS84
        temporal:
          description: The temporal extent of the features in the collection.
          type: object
          required:
            - interval
          properties:
            interval:
              description: >-
                One or more time intervals that describe the temporal extent of
                the dataset.


                The first time interval describes the overall

                temporal extent of the data. All subsequent time intervals
                describe 

                more precise time intervals, e.g., to identify clusters of data.

                Clients only interested in the overall extent will only need

                to access the first item in each array.
              type: array
              minItems: 1
              items:
                description: >-
                  Begin and end times of the time interval. The timestamps

                  are in the coordinate reference system specified in `trs`. By
                  default

                  this is the Gregorian calendar.


                  The value `null` is supported and indicates an open time
                  interval.
                type: array
                minItems: 2
                maxItems: 2
                items:
                  type: string
                  format: date-time
                  nullable: true
                example:
                  - 2011-11-11T12:22:11Z
                  - null
            trs:
              description: >-
                Coordinate reference system of the coordinates in the temporal
                extent

                (property `interval`). The default reference system is the
                Gregorian calendar.

                In the Core this is the only supported temporal reference
                system.

                Extensions may support additional temporal reference systems and
                add

                additional enum values.
              type: string
              enum:
                - http://www.opengis.net/def/uom/ISO-8601/0/Gregorian
              default: http://www.opengis.net/def/uom/ISO-8601/0/Gregorian
    providers:
      type: array
      description: >-
        A list of providers, which may include all organizations capturing or
        processing the data or the hosting provider. Providers should be listed
        in chronological order with the most recent provider being the last
        element of the list.
      items:
        type: object
        title: Provider
        required:
          - name
        properties:
          name:
            description: The name of the organization or the individual.
            type: string
          description:
            description: >-
              Multi-line description to add further provider information such as
              processing details for processors and producers, hosting details
              for hosts or basic contact information.


              [CommonMark 0.29](http://commonmark.org/) syntax MAY be used for
              rich text representation.
            type: string
          roles:
            description: |-
              Roles of the provider.

              The provider's role(s) can be one or more of the following
              elements:

              * licensor: The organization that is licensing the dataset under
                the license specified in the collection's license field.
              * producer: The producer of the data is the provider that
                initially captured and processed the source data, e.g. ESA for
                Sentinel-2 data.
              * processor: A processor is any provider who processed data to a
                derived product.
              * host: The host is the actual provider offering the data on their
                storage. There should be no more than one host, specified as last
                element of the list.
            type: array
            items:
              type: string
              enum:
                - producer
                - licensor
                - processor
                - host
          url:
            description: >-
              Homepage on which the provider describes the dataset and publishes
              contact information.
            type: string
            format: url
    collection:
      type: object
      required:
        - stac_version
        - type
        - id
        - description
        - license
        - extent
        - links
      properties:
        stac_version:
          $ref: '#/components/schemas/stac_version'
        stac_extensions:
          $ref: '#/components/schemas/stac_extensions'
        type:
          type: string
        id:
          description: identifier of the collection used, for example, in URIs
          type: string
        title:
          description: human readable title of the collection
          type: string
        description:
          type: string
          description: >-
            Detailed multi-line description to fully explain the catalog or
            collection.

            [CommonMark 0.29](http://commonmark.org/) syntax MAY be used for
            rich text representation.
        keywords:
          type: array
          description: List of keywords describing the collection.
          items:
            type: string
        license:
          $ref: '#/components/schemas/license'
        extent:
          $ref: '#/components/schemas/extent'
        providers:
          $ref: '#/components/schemas/providers'
        links:
          $ref: '#/components/schemas/links'
        summaries:
          description: |-
            Summaries are either a unique set of all available values *or*
            statistics. Statistics by default only specify the range (minimum
            and maximum values), but can optionally be accompanied by additional
            statistical values. The range can specify the potential range of
            values, but it is recommended to be as precise as possible. The set
            of values must contain at least one element and it is strongly
            recommended to list all values. It is recommended to list as many
            properties as reasonable so that consumers get a full overview of
            the Collection. Properties that are covered by the Collection
            specification (e.g. `providers` and `license`) may not be repeated
            in the summaries.
          type: object
          additionalProperties:
            oneOf:
              - type: array
                title: Set of values
                items:
                  description: A value of any type.
              - type: object
                title: Statistics
                description: |-
                  By default, only ranges with a minimum and a maximum value can
                  be specified. Ranges can be specified for ordinal values only,
                  which means they need to have a rank order. Therefore, ranges
                  can only be specified for numbers and some special types of
                  strings. Examples: grades (A to F), dates or times.
                  Implementors are free to add other derived statistical values
                  to the object, for example `mean` or `stddev`.
                required:
                  - min
                  - max
                properties:
                  min:
                    anyOf:
                      - type: string
                      - type: number
                  max:
                    anyOf:
                      - type: string
                      - type: number
      example:
        stac_version: 1.0.0
        stac_extensions: []
        type: Collection
        id: Sentinel-2
        title: 'Sentinel-2 MSI: MultiSpectral Instrument, Level-1C'
        description: |
          Sentinel-2 is a wide-swath, high-resolution, multi-spectral
          imaging mission...
        license: proprietary
        keywords:
          - copernicus
          - esa
          - eu
          - msi
          - radiance
          - sentinel
        providers:
          - name: ESA
            roles:
              - producer
              - licensor
            url: https://sentinel.esa.int/web/sentinel/user-guides/sentinel-2-msi
        extent:
          spatial:
            bbox:
              - - -180
                - -56
                - 180
                - 83
          temporal:
            interval:
              - - 2015-06-23T00:00:00Z
                - 2019-07-10T13:44:56Z
        summaries:
          datetime:
            min: 2015-06-23T00:00:00Z
            max: 2019-07-10T13:44:56Z
          sci:citation:
            - Copernicus Sentinel data [Year]
          eo:gsd:
            - 10
            - 30
            - 60
          platform:
            - sentinel-2a
            - sentinel-2b
          constellation:
            - sentinel-2
          instruments:
            - msi
          view:off_nadir:
            min: 0
            max: 100
          view:sun_elevation:
            min: 6.78
            max: 89.9
          eo:bands:
            - - name: B1
                common_name: coastal
                center_wavelength: 4.439
              - name: B2
                common_name: blue
                center_wavelength: 4.966
              - name: B3
                common_name: green
                center_wavelength: 5.6
              - name: B4
                common_name: red
                center_wavelength: 6.645
              - name: B5
                center_wavelength: 7.039
              - name: B6
                center_wavelength: 7.402
              - name: B7
                center_wavelength: 7.825
              - name: B8
                common_name: nir
                center_wavelength: 8.351
              - name: B8A
                center_wavelength: 8.648
              - name: B9
                center_wavelength: 9.45
              - name: B10
                center_wavelength: 1.3735
              - name: B11
                common_name: swir16
                center_wavelength: 1.6137
              - name: B12
                common_name: swir22
                center_wavelength: 2.2024
        links:
          - rel: self
            href: http://cool-sat.com/collections/Sentinel-2
          - rel: root
            href: http://cool-sat.com/collections
          - rel: license
            href: >-
              https://scihub.copernicus.eu/twiki/pub/SciHubWebPortal/TermsConditions/Sentinel_Data_Terms_and_Conditions.pdf
            title: >-
              Legal notice on the use of Copernicus Sentinel Data and Service
              Information
    exception:
      type: object
      description: >-
        Information about the exception: an error code plus an optional
        description.
      required:
        - code
      properties:
        code:
          type: string
        description:
          type: string
  responses:
    Children:
      description: >-
        The child catalogs and collections of the root catalog this API
        represents.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/children'
    InvalidParameter:
      description: A query parameter has an invalid value.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
    NotFound:
      description: The requested URI was not found.
    ServerError:
      description: A server error occurred.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
